# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at https://mozilla.org/MPL/2.0/.

# Full CI workflow
# Run before merging. Rebases on master to make sure CI passes for latest integration, not only for the PR at the time of creation.

name: Full CI

on:
  push:
    branches:
      - staging
      - trying

env:
  GDEXT_FEATURES: ''
#  GDEXT_FEATURES: '--features crate/feature'
#  GDEXT_CRATE_ARGS: '-p godot-codegen -p godot-ffi -p godot-core -p godot-macros -p godot'

  # LSan options: https://github.com/google/sanitizers/wiki/AddressSanitizerLeakSanitizer
  # * report_objects: list individual leaked objects when running LeakSanitizer
  LSAN_OPTIONS: report_objects=1

  # ASan options: https://github.com/google/sanitizers/wiki/AddressSanitizerFlags

defaults:
  run:
    shell: bash

# If a new commit is pushed before the old one's CI has completed (on the same branch), abort previous run
#concurrency:
#  group: ${{ github.head_ref }}
#  cancel-in-progress: true

jobs:
  rustfmt:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3

      - name: "Install Rust"
        uses: ./.github/composite/rust
        with:
          rust: stable
          components: rustfmt

      - name: "Check rustfmt"
        run: cargo fmt --all -- --check


  clippy:
    name: clippy (${{ matrix.name }})
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        include: 
          - name: linux
            rust-toolchain: stable
            godot-binary: godot.linuxbsd.editor.dev.x86_64
          
          - name